/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/[tag]/res/[thread]",{

/***/ "./node_modules/@bbob/parser/dist/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@bbob/parser/dist/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("(function (global, factory) {\n    true ? factory(exports, __webpack_require__(/*! @bbob/plugin-helper */ \"./node_modules/@bbob/plugin-helper/dist/index.js\")) :\n   0;\n})(this, (function (exports, pluginHelper) { 'use strict';\n\n   // type, value, line, row,\n   const TOKEN_TYPE_ID = 'type'; // 0;\n   const TOKEN_VALUE_ID = 'value'; // 1;\n   const TOKEN_COLUMN_ID = 'row'; // 2;\n   const TOKEN_LINE_ID = 'line'; // 3;\n   const TOKEN_TYPE_WORD = 1; // 'word';\n   const TOKEN_TYPE_TAG = 2; // 'tag';\n   const TOKEN_TYPE_ATTR_NAME = 3; // 'attr-name';\n   const TOKEN_TYPE_ATTR_VALUE = 4; // 'attr-value';\n   const TOKEN_TYPE_SPACE = 5; // 'space';\n   const TOKEN_TYPE_NEW_LINE = 6; // 'new-line';\n   /**\n    * @param {Token} token\n    * @returns {string}\n    */ const getTokenValue = (token)=>{\n       if (token && typeof token[TOKEN_VALUE_ID] !== 'undefined') {\n           return token[TOKEN_VALUE_ID];\n       }\n       return '';\n   };\n   /**\n    * @param {Token}token\n    * @returns {number}\n    */ const getTokenLine = (token)=>token && token[TOKEN_LINE_ID] || 0;\n   const getTokenColumn = (token)=>token && token[TOKEN_COLUMN_ID] || 0;\n   /**\n    * @param {Token} token\n    * @returns {boolean}\n    */ const isTextToken = (token)=>{\n       if (token && typeof token[TOKEN_TYPE_ID] !== 'undefined') {\n           return token[TOKEN_TYPE_ID] === TOKEN_TYPE_SPACE || token[TOKEN_TYPE_ID] === TOKEN_TYPE_NEW_LINE || token[TOKEN_TYPE_ID] === TOKEN_TYPE_WORD;\n       }\n       return false;\n   };\n   /**\n    * @param {Token} token\n    * @returns {boolean}\n    */ const isTagToken = (token)=>{\n       if (token && typeof token[TOKEN_TYPE_ID] !== 'undefined') {\n           return token[TOKEN_TYPE_ID] === TOKEN_TYPE_TAG;\n       }\n       return false;\n   };\n   const isTagEnd = (token)=>getTokenValue(token).charCodeAt(0) === pluginHelper.SLASH.charCodeAt(0);\n   const isTagStart = (token)=>!isTagEnd(token);\n   const isAttrNameToken = (token)=>{\n       if (token && typeof token[TOKEN_TYPE_ID] !== 'undefined') {\n           return token[TOKEN_TYPE_ID] === TOKEN_TYPE_ATTR_NAME;\n       }\n       return false;\n   };\n   /**\n    * @param {Token} token\n    * @returns {boolean}\n    */ const isAttrValueToken = (token)=>{\n       if (token && typeof token[TOKEN_TYPE_ID] !== 'undefined') {\n           return token[TOKEN_TYPE_ID] === TOKEN_TYPE_ATTR_VALUE;\n       }\n       return false;\n   };\n   const getTagName = (token)=>{\n       const value = getTokenValue(token);\n       return isTagEnd(token) ? value.slice(1) : value;\n   };\n   const convertTagToText = (token)=>{\n       let text = pluginHelper.OPEN_BRAKET;\n       text += getTokenValue(token);\n       text += pluginHelper.CLOSE_BRAKET;\n       return text;\n   };\n   class Token {\n       isEmpty() {\n           // eslint-disable-next-line no-restricted-globals\n           return isNaN(this[TOKEN_TYPE_ID]);\n       }\n       isText() {\n           return isTextToken(this);\n       }\n       isTag() {\n           return isTagToken(this);\n       }\n       isAttrName() {\n           return isAttrNameToken(this);\n       }\n       isAttrValue() {\n           return isAttrValueToken(this);\n       }\n       isStart() {\n           return isTagStart(this);\n       }\n       isEnd() {\n           return isTagEnd(this);\n       }\n       getName() {\n           return getTagName(this);\n       }\n       getValue() {\n           return getTokenValue(this);\n       }\n       getLine() {\n           return getTokenLine(this);\n       }\n       getColumn() {\n           return getTokenColumn(this);\n       }\n       toString() {\n           return convertTagToText(this);\n       }\n       /**\n      * @param {String} type\n      * @param {String} value\n      * @param line\n      * @param row\n      */ constructor(type, value, line, row){\n           this[TOKEN_TYPE_ID] = Number(type);\n           this[TOKEN_VALUE_ID] = String(value);\n           this[TOKEN_LINE_ID] = Number(line);\n           this[TOKEN_COLUMN_ID] = Number(row);\n       }\n   }\n   const TYPE_WORD = TOKEN_TYPE_WORD;\n   const TYPE_TAG = TOKEN_TYPE_TAG;\n   const TYPE_ATTR_NAME = TOKEN_TYPE_ATTR_NAME;\n   const TYPE_ATTR_VALUE = TOKEN_TYPE_ATTR_VALUE;\n   const TYPE_SPACE = TOKEN_TYPE_SPACE;\n   const TYPE_NEW_LINE = TOKEN_TYPE_NEW_LINE;\n\n   function CharGrabber(source, options) {\n       const cursor = {\n           pos: 0,\n           len: source.length\n       };\n       const substrUntilChar = (char)=>{\n           const { pos  } = cursor;\n           const idx = source.indexOf(char, pos);\n           return idx >= 0 ? source.substring(pos, idx) : '';\n       };\n       const includes = (val)=>source.indexOf(val, cursor.pos) >= 0;\n       const hasNext = ()=>cursor.len > cursor.pos;\n       const isLast = ()=>cursor.pos === cursor.len;\n       const skip = (num = 1, silent)=>{\n           cursor.pos += num;\n           if (options && options.onSkip && !silent) {\n               options.onSkip();\n           }\n       };\n       const rest = ()=>source.substring(cursor.pos);\n       const grabN = (num = 0)=>source.substring(cursor.pos, cursor.pos + num);\n       const curr = ()=>source[cursor.pos];\n       const prev = ()=>{\n           const prevPos = cursor.pos - 1;\n           return typeof source[prevPos] !== 'undefined' ? source[prevPos] : null;\n       };\n       const next = ()=>{\n           const nextPos = cursor.pos + 1;\n           return nextPos <= source.length - 1 ? source[nextPos] : null;\n       };\n       const grabWhile = (cond, silent)=>{\n           let start = 0;\n           if (hasNext()) {\n               start = cursor.pos;\n               while(hasNext() && cond(curr())){\n                   skip(1, silent);\n               }\n           }\n           return source.substring(start, cursor.pos);\n       };\n       /**\n      * @type {skip}\n      */ this.skip = skip;\n       /**\n      * @returns {Boolean}\n      */ this.hasNext = hasNext;\n       /**\n      * @returns {String}\n      */ this.getCurr = curr;\n       /**\n      * @returns {String}\n      */ this.getRest = rest;\n       /**\n      * @returns {String}\n      */ this.getNext = next;\n       /**\n      * @returns {String}\n      */ this.getPrev = prev;\n       /**\n      * @returns {Boolean}\n      */ this.isLast = isLast;\n       /**\n      * @returns {Boolean}\n      */ this.includes = includes;\n       /**\n      * @param {Function} cond\n      * @param {Boolean} silent\n      * @return {String}\n      */ this.grabWhile = grabWhile;\n       /**\n      * @param {Number} num\n      * @return {String}\n      */ this.grabN = grabN;\n       /**\n      * Grabs rest of string until it find a char\n      * @param {String} char\n      * @return {String}\n      */ this.substrUntilChar = substrUntilChar;\n   }\n   /**\n    * Creates a grabber wrapper for source string, that helps to iterate over string char by char\n    * @param {String} source\n    * @param {Object} options\n    * @param {Function} options.onSkip\n    * @return CharGrabber\n    */ const createCharGrabber = (source, options)=>new CharGrabber(source, options);\n   /**\n    * Trims string from start and end by char\n    * @example\n    *  trimChar('*hello*', '*') ==> 'hello'\n    * @param {String} str\n    * @param {String} charToRemove\n    * @returns {String}\n    */ const trimChar = (str, charToRemove)=>{\n       while(str.charAt(0) === charToRemove){\n           // eslint-disable-next-line no-param-reassign\n           str = str.substring(1);\n       }\n       while(str.charAt(str.length - 1) === charToRemove){\n           // eslint-disable-next-line no-param-reassign\n           str = str.substring(0, str.length - 1);\n       }\n       return str;\n   };\n   /**\n    * Unquotes \\\" to \"\n    * @param str\n    * @return {String}\n    */ const unquote = (str)=>str.replace(pluginHelper.BACKSLASH + pluginHelper.QUOTEMARK, pluginHelper.QUOTEMARK);\n   function NodeList(values = []) {\n       const nodes = values;\n       const getLast = ()=>Array.isArray(nodes) && nodes.length > 0 && typeof nodes[nodes.length - 1] !== 'undefined' ? nodes[nodes.length - 1] : null;\n       const flushLast = ()=>nodes.length ? nodes.pop() : false;\n       const push = (value)=>nodes.push(value);\n       const toArray = ()=>nodes;\n       this.push = push;\n       this.toArray = toArray;\n       this.getLast = getLast;\n       this.flushLast = flushLast;\n   }\n   /**\n    *\n    * @param values\n    * @return {NodeList}\n    */ const createList = (values = [])=>new NodeList(values);\n\n   // for cases <!-- -->\n   const EM = '!';\n   /**\n    * Creates a Token entity class\n    * @param {Number} type\n    * @param {String} value\n    * @param {Number} r line number\n    * @param {Number} cl char number in line\n    */ const createToken = (type, value, r = 0, cl = 0)=>new Token(type, value, r, cl);\n   /**\n    * @typedef {Object} Lexer\n    * @property {Function} tokenize\n    * @property {Function} isTokenNested\n    */ /**\n    * @param {String} buffer\n    * @param {Object} options\n    * @param {Function} options.onToken\n    * @param {String} options.openTag\n    * @param {String} options.closeTag\n    * @param {Boolean} options.enableEscapeTags\n    * @return {Lexer}\n    */ function createLexer(buffer, options = {}) {\n       const STATE_WORD = 0;\n       const STATE_TAG = 1;\n       const STATE_TAG_ATTRS = 2;\n       const TAG_STATE_NAME = 0;\n       const TAG_STATE_ATTR = 1;\n       const TAG_STATE_VALUE = 2;\n       let row = 0;\n       let col = 0;\n       let tokenIndex = -1;\n       let stateMode = STATE_WORD;\n       let tagMode = TAG_STATE_NAME;\n       let contextFreeTag = '';\n       const tokens = new Array(Math.floor(buffer.length));\n       const openTag = options.openTag || pluginHelper.OPEN_BRAKET;\n       const closeTag = options.closeTag || pluginHelper.CLOSE_BRAKET;\n       const escapeTags = !!options.enableEscapeTags;\n       const contextFreeTags = options.contextFreeTags || [];\n       const onToken = options.onToken || (()=>{});\n       const RESERVED_CHARS = [\n           closeTag,\n           openTag,\n           pluginHelper.QUOTEMARK,\n           pluginHelper.BACKSLASH,\n           pluginHelper.SPACE,\n           pluginHelper.TAB,\n           pluginHelper.EQ,\n           pluginHelper.N,\n           EM\n       ];\n       const NOT_CHAR_TOKENS = [\n           openTag,\n           pluginHelper.SPACE,\n           pluginHelper.TAB,\n           pluginHelper.N\n       ];\n       const WHITESPACES = [\n           pluginHelper.SPACE,\n           pluginHelper.TAB\n       ];\n       const SPECIAL_CHARS = [\n           pluginHelper.EQ,\n           pluginHelper.SPACE,\n           pluginHelper.TAB\n       ];\n       const isCharReserved = (char)=>RESERVED_CHARS.indexOf(char) >= 0;\n       const isNewLine = (char)=>char === pluginHelper.N;\n       const isWhiteSpace = (char)=>WHITESPACES.indexOf(char) >= 0;\n       const isCharToken = (char)=>NOT_CHAR_TOKENS.indexOf(char) === -1;\n       const isSpecialChar = (char)=>SPECIAL_CHARS.indexOf(char) >= 0;\n       const isEscapableChar = (char)=>char === openTag || char === closeTag || char === pluginHelper.BACKSLASH;\n       const isEscapeChar = (char)=>char === pluginHelper.BACKSLASH;\n       const onSkip = ()=>{\n           col++;\n       };\n       const unq = (val)=>unquote(trimChar(val, pluginHelper.QUOTEMARK));\n       const checkContextFreeMode = (name, isClosingTag)=>{\n           if (contextFreeTag !== '' && isClosingTag) {\n               contextFreeTag = '';\n           }\n           if (contextFreeTag === '' && contextFreeTags.includes(name)) {\n               contextFreeTag = name;\n           }\n       };\n       const chars = createCharGrabber(buffer, {\n           onSkip\n       });\n       /**\n      * Emits newly created token to subscriber\n      * @param {Number} type\n      * @param {String} value\n      */ function emitToken(type, value) {\n           const token = createToken(type, value, row, col);\n           onToken(token);\n           tokenIndex += 1;\n           tokens[tokenIndex] = token;\n       }\n       function nextTagState(tagChars, isSingleValueTag) {\n           if (tagMode === TAG_STATE_ATTR) {\n               const validAttrName = (char)=>!(char === pluginHelper.EQ || isWhiteSpace(char));\n               const name = tagChars.grabWhile(validAttrName);\n               const isEnd = tagChars.isLast();\n               const isValue = tagChars.getCurr() !== pluginHelper.EQ;\n               tagChars.skip();\n               if (isEnd || isValue) {\n                   emitToken(TYPE_ATTR_VALUE, unq(name));\n               } else {\n                   emitToken(TYPE_ATTR_NAME, name);\n               }\n               if (isEnd) {\n                   return TAG_STATE_NAME;\n               }\n               if (isValue) {\n                   return TAG_STATE_ATTR;\n               }\n               return TAG_STATE_VALUE;\n           }\n           if (tagMode === TAG_STATE_VALUE) {\n               let stateSpecial = false;\n               const validAttrValue = (char)=>{\n                   // const isEQ = char === EQ;\n                   const isQM = char === pluginHelper.QUOTEMARK;\n                   const prevChar = tagChars.getPrev();\n                   const nextChar = tagChars.getNext();\n                   const isPrevSLASH = prevChar === pluginHelper.BACKSLASH;\n                   const isNextEQ = nextChar === pluginHelper.EQ;\n                   const isWS = isWhiteSpace(char);\n                   // const isPrevWS = isWhiteSpace(prevChar);\n                   const isNextWS = isWhiteSpace(nextChar);\n                   if (stateSpecial && isSpecialChar(char)) {\n                       return true;\n                   }\n                   if (isQM && !isPrevSLASH) {\n                       stateSpecial = !stateSpecial;\n                       if (!stateSpecial && !(isNextEQ || isNextWS)) {\n                           return false;\n                       }\n                   }\n                   if (!isSingleValueTag) {\n                       return isWS === false;\n                   // return (isEQ || isWS) === false;\n                   }\n                   return true;\n               };\n               const name1 = tagChars.grabWhile(validAttrValue);\n               tagChars.skip();\n               emitToken(TYPE_ATTR_VALUE, unq(name1));\n               if (tagChars.isLast()) {\n                   return TAG_STATE_NAME;\n               }\n               return TAG_STATE_ATTR;\n           }\n           const validName = (char)=>!(char === pluginHelper.EQ || isWhiteSpace(char) || tagChars.isLast());\n           const name2 = tagChars.grabWhile(validName);\n           emitToken(TYPE_TAG, name2);\n           checkContextFreeMode(name2);\n           tagChars.skip();\n           // in cases when we has [url=someval]GET[/url] and we dont need to parse all\n           if (isSingleValueTag) {\n               return TAG_STATE_VALUE;\n           }\n           const hasEQ = tagChars.includes(pluginHelper.EQ);\n           return hasEQ ? TAG_STATE_ATTR : TAG_STATE_VALUE;\n       }\n       function stateTag() {\n           const currChar = chars.getCurr();\n           const nextChar = chars.getNext();\n           chars.skip();\n           // detect case where we have '[My word [tag][/tag]' or we have '[My last line word'\n           const substr = chars.substrUntilChar(closeTag);\n           const hasInvalidChars = substr.length === 0 || substr.indexOf(openTag) >= 0;\n           if (isCharReserved(nextChar) || hasInvalidChars || chars.isLast()) {\n               emitToken(TYPE_WORD, currChar);\n               return STATE_WORD;\n           }\n           // [myTag   ]\n           const isNoAttrsInTag = substr.indexOf(pluginHelper.EQ) === -1;\n           // [/myTag]\n           const isClosingTag = substr[0] === pluginHelper.SLASH;\n           if (isNoAttrsInTag || isClosingTag) {\n               const name = chars.grabWhile((char)=>char !== closeTag);\n               chars.skip(); // skip closeTag\n               emitToken(TYPE_TAG, name);\n               checkContextFreeMode(name, isClosingTag);\n               return STATE_WORD;\n           }\n           return STATE_TAG_ATTRS;\n       }\n       function stateAttrs() {\n           const silent = true;\n           const tagStr = chars.grabWhile((char)=>char !== closeTag, silent);\n           const tagGrabber = createCharGrabber(tagStr, {\n               onSkip\n           });\n           const hasSpace = tagGrabber.includes(pluginHelper.SPACE);\n           tagMode = TAG_STATE_NAME;\n           while(tagGrabber.hasNext()){\n               tagMode = nextTagState(tagGrabber, !hasSpace);\n           }\n           chars.skip(); // skip closeTag\n           return STATE_WORD;\n       }\n       function stateWord() {\n           if (isNewLine(chars.getCurr())) {\n               emitToken(TYPE_NEW_LINE, chars.getCurr());\n               chars.skip();\n               col = 0;\n               row++;\n               return STATE_WORD;\n           }\n           if (isWhiteSpace(chars.getCurr())) {\n               const word = chars.grabWhile(isWhiteSpace);\n               emitToken(TYPE_SPACE, word);\n               return STATE_WORD;\n           }\n           if (chars.getCurr() === openTag) {\n               if (contextFreeTag) {\n                   const fullTagLen = openTag.length + pluginHelper.SLASH.length + contextFreeTag.length;\n                   const fullTagName = `${openTag}${pluginHelper.SLASH}${contextFreeTag}`;\n                   const foundTag = chars.grabN(fullTagLen);\n                   const isEndContextFreeMode = foundTag === fullTagName;\n                   if (isEndContextFreeMode) {\n                       return STATE_TAG;\n                   }\n               } else if (chars.includes(closeTag)) {\n                   return STATE_TAG;\n               }\n               emitToken(TYPE_WORD, chars.getCurr());\n               chars.skip();\n               return STATE_WORD;\n           }\n           if (escapeTags) {\n               if (isEscapeChar(chars.getCurr())) {\n                   const currChar = chars.getCurr();\n                   const nextChar = chars.getNext();\n                   chars.skip(); // skip the \\ without emitting anything\n                   if (isEscapableChar(nextChar)) {\n                       chars.skip(); // skip past the [, ] or \\ as well\n                       emitToken(TYPE_WORD, nextChar);\n                       return STATE_WORD;\n                   }\n                   emitToken(TYPE_WORD, currChar);\n                   return STATE_WORD;\n               }\n               const isChar = (char)=>isCharToken(char) && !isEscapeChar(char);\n               const word1 = chars.grabWhile(isChar);\n               emitToken(TYPE_WORD, word1);\n               return STATE_WORD;\n           }\n           const word2 = chars.grabWhile(isCharToken);\n           emitToken(TYPE_WORD, word2);\n           return STATE_WORD;\n       }\n       function tokenize() {\n           stateMode = STATE_WORD;\n           while(chars.hasNext()){\n               switch(stateMode){\n                   case STATE_TAG:\n                       stateMode = stateTag();\n                       break;\n                   case STATE_TAG_ATTRS:\n                       stateMode = stateAttrs();\n                       break;\n                   case STATE_WORD:\n                   default:\n                       stateMode = stateWord();\n                       break;\n               }\n           }\n           tokens.length = tokenIndex + 1;\n           return tokens;\n       }\n       function isTokenNested(token) {\n           const value = openTag + pluginHelper.SLASH + token.getValue();\n           // potential bottleneck\n           return buffer.indexOf(value) > -1;\n       }\n       return {\n           tokenize,\n           isTokenNested\n       };\n   }\n\n   /**\n    * @public\n    * @param {string} input\n    * @param {Object} opts\n    * @param {Function} opts.createTokenizer\n    * @param {Array<string>} opts.onlyAllowTags\n    * @param {Array<string>} opts.contextFreeTags\n    * @param {Boolean} opts.enableEscapeTags\n    * @param {string} opts.openTag\n    * @param {string} opts.closeTag\n    * @return {Array<string|TagNode>}\n    */ const parse = (input, opts = {})=>{\n       const options = opts;\n       const openTag = options.openTag || pluginHelper.OPEN_BRAKET;\n       const closeTag = options.closeTag || pluginHelper.CLOSE_BRAKET;\n       const onlyAllowTags = (options.onlyAllowTags || []).filter(Boolean).map((tag)=>tag.toLowerCase());\n       let tokenizer = null;\n       /**\n      * Result AST of nodes\n      * @private\n      * @type {NodeList}\n      */ const nodes = createList();\n       /**\n      * Temp buffer of nodes that's nested to another node\n      * @private\n      * @type {NodeList}\n      */ const nestedNodes = createList();\n       /**\n      * Temp buffer of nodes [tag..]...[/tag]\n      * @private\n      * @type {NodeList}\n      */ const tagNodes = createList();\n       /**\n      * Temp buffer of tag attributes\n      * @private\n      * @type {NodeList}\n      */ const tagNodesAttrName = createList();\n       /**\n      * Cache for nested tags checks\n      * @type Set<string>\n      */ const nestedTagsMap = new Set();\n       /**\n      * @param {Token} token\n      * @returns {boolean}\n      */ const isTokenNested = (token)=>{\n           const value = token.getValue();\n           if (!nestedTagsMap.has(value) && tokenizer.isTokenNested && tokenizer.isTokenNested(token)) {\n               nestedTagsMap.add(value);\n               return true;\n           }\n           return nestedTagsMap.has(value);\n       };\n       /**\n      * @private\n      * @param {string} tagName\n      * @returns {boolean}\n      */ const isTagNested = (tagName)=>Boolean(nestedTagsMap.has(tagName));\n       /**\n      * @private\n      * @param {string} value\n      * @return {boolean}\n      */ const isAllowedTag = (value)=>{\n           if (onlyAllowTags.length) {\n               return onlyAllowTags.indexOf(value.toLowerCase()) >= 0;\n           }\n           return true;\n       };\n       /**\n      * Flushes temp tag nodes and its attributes buffers\n      * @private\n      * @return {Array}\n      */ const flushTagNodes = ()=>{\n           if (tagNodes.flushLast()) {\n               tagNodesAttrName.flushLast();\n           }\n       };\n       /**\n      * @private\n      * @return {Array}\n      */ const getNodes = ()=>{\n           const lastNestedNode = nestedNodes.getLast();\n           if (lastNestedNode && Array.isArray(lastNestedNode.content)) {\n               return lastNestedNode.content;\n           }\n           return nodes.toArray();\n       };\n       /**\n      * @private\n      * @param {string|TagNode} node\n      * @param {boolean} isNested\n      */ const appendNodeAsString = (node, isNested = true)=>{\n           const items = getNodes();\n           if (Array.isArray(items)) {\n               items.push(node.toTagStart({\n                   openTag,\n                   closeTag\n               }));\n               if (node.content.length) {\n                   node.content.forEach((item)=>{\n                       items.push(item);\n                   });\n                   if (isNested) {\n                       items.push(node.toTagEnd({\n                           openTag,\n                           closeTag\n                       }));\n                   }\n               }\n           }\n       };\n       /**\n      * @private\n      * @param {string|TagNode} node\n      */ const appendNodes = (node)=>{\n           const items = getNodes();\n           if (Array.isArray(items)) {\n               if (pluginHelper.isTagNode(node)) {\n                   if (isAllowedTag(node.tag)) {\n                       items.push(node.toTagNode());\n                   } else {\n                       appendNodeAsString(node);\n                   }\n               } else {\n                   items.push(node);\n               }\n           }\n       };\n       /**\n      * @private\n      * @param {Token} token\n      */ const handleTagStart = (token)=>{\n           flushTagNodes();\n           const tagNode = pluginHelper.TagNode.create(token.getValue());\n           const isNested = isTokenNested(token);\n           tagNodes.push(tagNode);\n           if (isNested) {\n               nestedNodes.push(tagNode);\n           } else {\n               appendNodes(tagNode);\n           }\n       };\n       /**\n      * @private\n      * @param {Token} token\n      */ const handleTagEnd = (token)=>{\n           flushTagNodes();\n           const lastNestedNode = nestedNodes.flushLast();\n           if (lastNestedNode) {\n               appendNodes(lastNestedNode);\n           } else if (typeof options.onError === 'function') {\n               const tag = token.getValue();\n               const line = token.getLine();\n               const column = token.getColumn();\n               options.onError({\n                   message: `Inconsistent tag '${tag}' on line ${line} and column ${column}`,\n                   tagName: tag,\n                   lineNumber: line,\n                   columnNumber: column\n               });\n           }\n       };\n       /**\n      * @private\n      * @param {Token} token\n      */ const handleTag = (token)=>{\n           // [tag]\n           if (token.isStart()) {\n               handleTagStart(token);\n           }\n           // [/tag]\n           if (token.isEnd()) {\n               handleTagEnd(token);\n           }\n       };\n       /**\n      * @private\n      * @param {Token} token\n      */ const handleNode = (token)=>{\n           /**\n        * @type {TagNode}\n        */ const lastTagNode = tagNodes.getLast();\n           const tokenValue = token.getValue();\n           const isNested = isTagNested(token);\n           if (lastTagNode) {\n               if (token.isAttrName()) {\n                   tagNodesAttrName.push(tokenValue);\n                   lastTagNode.attr(tagNodesAttrName.getLast(), '');\n               } else if (token.isAttrValue()) {\n                   const attrName = tagNodesAttrName.getLast();\n                   if (attrName) {\n                       lastTagNode.attr(attrName, tokenValue);\n                       tagNodesAttrName.flushLast();\n                   } else {\n                       lastTagNode.attr(tokenValue, tokenValue);\n                   }\n               } else if (token.isText()) {\n                   if (isNested) {\n                       lastTagNode.append(tokenValue);\n                   } else {\n                       appendNodes(tokenValue);\n                   }\n               } else if (token.isTag()) {\n                   // if tag is not allowed, just past it as is\n                   appendNodes(token.toString());\n               }\n           } else if (token.isText()) {\n               appendNodes(tokenValue);\n           } else if (token.isTag()) {\n               // if tag is not allowed, just past it as is\n               appendNodes(token.toString());\n           }\n       };\n       /**\n      * @private\n      * @param {Token} token\n      */ const onToken = (token)=>{\n           if (token.isTag()) {\n               handleTag(token);\n           } else {\n               handleNode(token);\n           }\n       };\n       tokenizer = (opts.createTokenizer ? opts.createTokenizer : createLexer)(input, {\n           onToken,\n           openTag,\n           closeTag,\n           onlyAllowTags: options.onlyAllowTags,\n           contextFreeTags: options.contextFreeTags,\n           enableEscapeTags: options.enableEscapeTags\n       });\n       // eslint-disable-next-line no-unused-vars\n       tokenizer.tokenize();\n       // handles situations where we open tag, but forgot close them\n       // for ex [q]test[/q][u]some[/u][q]some [u]some[/u] // forgot to close [/q]\n       // so we need to flush nested content to nodes array\n       const lastNestedNode = nestedNodes.flushLast();\n       if (lastNestedNode && isTagNested(lastNestedNode.tag)) {\n           appendNodeAsString(lastNestedNode, false);\n       }\n       return nodes.toArray();\n   };\n\n   Object.defineProperty(exports, 'TagNode', {\n      enumerable: true,\n      get: function () { return pluginHelper.TagNode; }\n   });\n   exports.default = parse;\n   exports.parse = parse;\n\n   Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bbob/parser/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@bbob/plugin-helper/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@bbob/plugin-helper/dist/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("(function (global, factory) {\n     true ? factory(exports) :\n    0;\n})(this, (function (exports) { 'use strict';\n\n    const N = '\\n';\n    const TAB = '\\t';\n    const F = '\\f';\n    const R = '\\r';\n    const EQ = '=';\n    const QUOTEMARK = '\"';\n    const SPACE = ' ';\n    const OPEN_BRAKET = '[';\n    const CLOSE_BRAKET = ']';\n    const SLASH = '/';\n    const BACKSLASH = '\\\\';\n\n    const isTagNode = (el)=>typeof el === 'object' && !!el.tag;\n    const isStringNode = (el)=>typeof el === 'string';\n    const isEOL = (el)=>el === N;\n    const keysReduce = (obj, reduce, def)=>Object.keys(obj).reduce(reduce, def);\n    const getNodeLength = (node)=>{\n        if (isTagNode(node)) {\n            return node.content.reduce((count, contentNode)=>count + getNodeLength(contentNode), 0);\n        }\n        if (isStringNode(node)) {\n            return node.length;\n        }\n        return 0;\n    };\n    /**\n     * Appends value to Tag Node\n     * @param {TagNode} node\n     * @param value\n     */ const appendToNode = (node, value)=>{\n        node.content.push(value);\n    };\n    /**\n     * Replaces \" to &qquot;\n     * @param {String} value\n     */ const escapeHTML = (value)=>value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;')// eslint-disable-next-line no-script-url\n        .replace(/(javascript|data|vbscript):/gi, '$1%3A');\n    /**\n     * Acept name and value and return valid html5 attribute string\n     * @param {String} name\n     * @param {String} value\n     * @return {string}\n     */ const attrValue = (name, value)=>{\n        const type = typeof value;\n        const types = {\n            boolean: ()=>value ? `${name}` : '',\n            number: ()=>`${name}=\"${value}\"`,\n            string: ()=>`${name}=\"${escapeHTML(value)}\"`,\n            object: ()=>`${name}=\"${escapeHTML(JSON.stringify(value))}\"`\n        };\n        return types[type] ? types[type]() : '';\n    };\n    /**\n     * Transforms attrs to html params string\n     * @param values\n     */ const attrsToString = (values)=>{\n        // To avoid some malformed attributes\n        if (values == null) {\n            return '';\n        }\n        return keysReduce(values, (arr, key)=>[\n                ...arr,\n                attrValue(key, values[key])\n            ], [\n            ''\n        ]).join(' ');\n    };\n    /**\n     * Gets value from\n     * @example\n     * getUniqAttr({ 'foo': true, 'bar': bar' }) => 'bar'\n     * @param attrs\n     * @returns {string}\n     */ const getUniqAttr = (attrs)=>keysReduce(attrs, (res, key)=>attrs[key] === key ? attrs[key] : null, null);\n\n    const getTagAttrs = (tag, params)=>{\n        const uniqAattr = getUniqAttr(params);\n        if (uniqAattr) {\n            const tagAttr = attrValue(tag, uniqAattr);\n            const attrs = {\n                ...params\n            };\n            delete attrs[uniqAattr];\n            const attrsStr = attrsToString(attrs);\n            return `${tagAttr}${attrsStr}`;\n        }\n        return `${tag}${attrsToString(params)}`;\n    };\n    class TagNode {\n        attr(name, value) {\n            if (typeof value !== 'undefined') {\n                this.attrs[name] = value;\n            }\n            return this.attrs[name];\n        }\n        append(value) {\n            return appendToNode(this, value);\n        }\n        get length() {\n            return getNodeLength(this);\n        }\n        toTagStart({ openTag =OPEN_BRAKET , closeTag =CLOSE_BRAKET  } = {}) {\n            const tagAttrs = getTagAttrs(this.tag, this.attrs);\n            return `${openTag}${tagAttrs}${closeTag}`;\n        }\n        toTagEnd({ openTag =OPEN_BRAKET , closeTag =CLOSE_BRAKET  } = {}) {\n            return `${openTag}${SLASH}${this.tag}${closeTag}`;\n        }\n        toTagNode() {\n            return new TagNode(this.tag.toLowerCase(), this.attrs, this.content);\n        }\n        toString({ openTag =OPEN_BRAKET , closeTag =CLOSE_BRAKET  } = {}) {\n            const isEmpty = this.content.length === 0;\n            const content = this.content.reduce((r, node)=>r + node.toString({\n                    openTag,\n                    closeTag\n                }), '');\n            const tagStart = this.toTagStart({\n                openTag,\n                closeTag\n            });\n            if (isEmpty) {\n                return tagStart;\n            }\n            return `${tagStart}${content}${this.toTagEnd({\n            openTag,\n            closeTag\n        })}`;\n        }\n        constructor(tag, attrs, content){\n            this.tag = tag;\n            this.attrs = attrs;\n            this.content = Array.isArray(content) ? content : [\n                content\n            ];\n        }\n    }\n    TagNode.create = (tag, attrs = {}, content = [])=>new TagNode(tag, attrs, content);\n    TagNode.isOf = (node, type)=>node.tag === type;\n\n    exports.BACKSLASH = BACKSLASH;\n    exports.CLOSE_BRAKET = CLOSE_BRAKET;\n    exports.EQ = EQ;\n    exports.F = F;\n    exports.N = N;\n    exports.OPEN_BRAKET = OPEN_BRAKET;\n    exports.QUOTEMARK = QUOTEMARK;\n    exports.R = R;\n    exports.SLASH = SLASH;\n    exports.SPACE = SPACE;\n    exports.TAB = TAB;\n    exports.TagNode = TagNode;\n    exports.appendToNode = appendToNode;\n    exports.attrValue = attrValue;\n    exports.attrsToString = attrsToString;\n    exports.escapeHTML = escapeHTML;\n    exports.getNodeLength = getNodeLength;\n    exports.getUniqAttr = getUniqAttr;\n    exports.isEOL = isEOL;\n    exports.isStringNode = isStringNode;\n    exports.isTagNode = isTagNode;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJib2IvcGx1Z2luLWhlbHBlci9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSSxLQUE0RDtBQUNoRSxJQUFJLENBQ2lIO0FBQ3JILENBQUMsOEJBQThCOztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsOERBQThELHNCQUFzQixzQkFBc0Isd0JBQXdCLHdCQUF3QjtBQUMxSjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsS0FBSztBQUN6QywyQkFBMkIsS0FBSyxJQUFJLE1BQU07QUFDMUMsMkJBQTJCLEtBQUssSUFBSSxrQkFBa0I7QUFDdEQsMkJBQTJCLEtBQUssSUFBSSxrQ0FBa0M7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDBCQUEwQjtBQUMvQztBQUNBLGlCQUFpQjtBQUNqQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsUUFBUSxFQUFFLFNBQVM7QUFDekM7QUFDQSxrQkFBa0IsSUFBSSxFQUFFLHNCQUFzQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGlEQUFpRCxJQUFJO0FBQzFFO0FBQ0Esc0JBQXNCLFFBQVEsRUFBRSxTQUFTLEVBQUUsU0FBUztBQUNwRDtBQUNBLG1CQUFtQixpREFBaUQsSUFBSTtBQUN4RSxzQkFBc0IsUUFBUSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsU0FBUztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixpREFBaUQsSUFBSTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVMsRUFBRSxRQUFRLEVBQUU7QUFDM0M7QUFDQTtBQUNBLFNBQVMsRUFBRTtBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJib2IvcGx1Z2luLWhlbHBlci9kaXN0L2luZGV4LmpzPzEzNmMiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgICB0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgPyBmYWN0b3J5KGV4cG9ydHMpIDpcbiAgICB0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoWydleHBvcnRzJ10sIGZhY3RvcnkpIDpcbiAgICAoZ2xvYmFsID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsVGhpcyA6IGdsb2JhbCB8fCBzZWxmLCBmYWN0b3J5KGdsb2JhbC5CYm9iUGx1Z2luSGVscGVyID0ge30pKTtcbn0pKHRoaXMsIChmdW5jdGlvbiAoZXhwb3J0cykgeyAndXNlIHN0cmljdCc7XG5cbiAgICBjb25zdCBOID0gJ1xcbic7XG4gICAgY29uc3QgVEFCID0gJ1xcdCc7XG4gICAgY29uc3QgRiA9ICdcXGYnO1xuICAgIGNvbnN0IFIgPSAnXFxyJztcbiAgICBjb25zdCBFUSA9ICc9JztcbiAgICBjb25zdCBRVU9URU1BUksgPSAnXCInO1xuICAgIGNvbnN0IFNQQUNFID0gJyAnO1xuICAgIGNvbnN0IE9QRU5fQlJBS0VUID0gJ1snO1xuICAgIGNvbnN0IENMT1NFX0JSQUtFVCA9ICddJztcbiAgICBjb25zdCBTTEFTSCA9ICcvJztcbiAgICBjb25zdCBCQUNLU0xBU0ggPSAnXFxcXCc7XG5cbiAgICBjb25zdCBpc1RhZ05vZGUgPSAoZWwpPT50eXBlb2YgZWwgPT09ICdvYmplY3QnICYmICEhZWwudGFnO1xuICAgIGNvbnN0IGlzU3RyaW5nTm9kZSA9IChlbCk9PnR5cGVvZiBlbCA9PT0gJ3N0cmluZyc7XG4gICAgY29uc3QgaXNFT0wgPSAoZWwpPT5lbCA9PT0gTjtcbiAgICBjb25zdCBrZXlzUmVkdWNlID0gKG9iaiwgcmVkdWNlLCBkZWYpPT5PYmplY3Qua2V5cyhvYmopLnJlZHVjZShyZWR1Y2UsIGRlZik7XG4gICAgY29uc3QgZ2V0Tm9kZUxlbmd0aCA9IChub2RlKT0+e1xuICAgICAgICBpZiAoaXNUYWdOb2RlKG5vZGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gbm9kZS5jb250ZW50LnJlZHVjZSgoY291bnQsIGNvbnRlbnROb2RlKT0+Y291bnQgKyBnZXROb2RlTGVuZ3RoKGNvbnRlbnROb2RlKSwgMCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzU3RyaW5nTm9kZShub2RlKSkge1xuICAgICAgICAgICAgcmV0dXJuIG5vZGUubGVuZ3RoO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQXBwZW5kcyB2YWx1ZSB0byBUYWcgTm9kZVxuICAgICAqIEBwYXJhbSB7VGFnTm9kZX0gbm9kZVxuICAgICAqIEBwYXJhbSB2YWx1ZVxuICAgICAqLyBjb25zdCBhcHBlbmRUb05vZGUgPSAobm9kZSwgdmFsdWUpPT57XG4gICAgICAgIG5vZGUuY29udGVudC5wdXNoKHZhbHVlKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJlcGxhY2VzIFwiIHRvICZxcXVvdDtcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gdmFsdWVcbiAgICAgKi8gY29uc3QgZXNjYXBlSFRNTCA9ICh2YWx1ZSk9PnZhbHVlLnJlcGxhY2UoLyYvZywgJyZhbXA7JykucmVwbGFjZSgvPC9nLCAnJmx0OycpLnJlcGxhY2UoLz4vZywgJyZndDsnKS5yZXBsYWNlKC9cIi9nLCAnJnF1b3Q7JykucmVwbGFjZSgvJy9nLCAnJiMwMzk7JykvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2NyaXB0LXVybFxuICAgICAgICAucmVwbGFjZSgvKGphdmFzY3JpcHR8ZGF0YXx2YnNjcmlwdCk6L2dpLCAnJDElM0EnKTtcbiAgICAvKipcbiAgICAgKiBBY2VwdCBuYW1lIGFuZCB2YWx1ZSBhbmQgcmV0dXJuIHZhbGlkIGh0bWw1IGF0dHJpYnV0ZSBzdHJpbmdcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZVxuICAgICAqIEByZXR1cm4ge3N0cmluZ31cbiAgICAgKi8gY29uc3QgYXR0clZhbHVlID0gKG5hbWUsIHZhbHVlKT0+e1xuICAgICAgICBjb25zdCB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICAgICAgICBjb25zdCB0eXBlcyA9IHtcbiAgICAgICAgICAgIGJvb2xlYW46ICgpPT52YWx1ZSA/IGAke25hbWV9YCA6ICcnLFxuICAgICAgICAgICAgbnVtYmVyOiAoKT0+YCR7bmFtZX09XCIke3ZhbHVlfVwiYCxcbiAgICAgICAgICAgIHN0cmluZzogKCk9PmAke25hbWV9PVwiJHtlc2NhcGVIVE1MKHZhbHVlKX1cImAsXG4gICAgICAgICAgICBvYmplY3Q6ICgpPT5gJHtuYW1lfT1cIiR7ZXNjYXBlSFRNTChKU09OLnN0cmluZ2lmeSh2YWx1ZSkpfVwiYFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdHlwZXNbdHlwZV0gPyB0eXBlc1t0eXBlXSgpIDogJyc7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBUcmFuc2Zvcm1zIGF0dHJzIHRvIGh0bWwgcGFyYW1zIHN0cmluZ1xuICAgICAqIEBwYXJhbSB2YWx1ZXNcbiAgICAgKi8gY29uc3QgYXR0cnNUb1N0cmluZyA9ICh2YWx1ZXMpPT57XG4gICAgICAgIC8vIFRvIGF2b2lkIHNvbWUgbWFsZm9ybWVkIGF0dHJpYnV0ZXNcbiAgICAgICAgaWYgKHZhbHVlcyA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGtleXNSZWR1Y2UodmFsdWVzLCAoYXJyLCBrZXkpPT5bXG4gICAgICAgICAgICAgICAgLi4uYXJyLFxuICAgICAgICAgICAgICAgIGF0dHJWYWx1ZShrZXksIHZhbHVlc1trZXldKVxuICAgICAgICAgICAgXSwgW1xuICAgICAgICAgICAgJydcbiAgICAgICAgXSkuam9pbignICcpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogR2V0cyB2YWx1ZSBmcm9tXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBnZXRVbmlxQXR0cih7ICdmb28nOiB0cnVlLCAnYmFyJzogYmFyJyB9KSA9PiAnYmFyJ1xuICAgICAqIEBwYXJhbSBhdHRyc1xuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovIGNvbnN0IGdldFVuaXFBdHRyID0gKGF0dHJzKT0+a2V5c1JlZHVjZShhdHRycywgKHJlcywga2V5KT0+YXR0cnNba2V5XSA9PT0ga2V5ID8gYXR0cnNba2V5XSA6IG51bGwsIG51bGwpO1xuXG4gICAgY29uc3QgZ2V0VGFnQXR0cnMgPSAodGFnLCBwYXJhbXMpPT57XG4gICAgICAgIGNvbnN0IHVuaXFBYXR0ciA9IGdldFVuaXFBdHRyKHBhcmFtcyk7XG4gICAgICAgIGlmICh1bmlxQWF0dHIpIHtcbiAgICAgICAgICAgIGNvbnN0IHRhZ0F0dHIgPSBhdHRyVmFsdWUodGFnLCB1bmlxQWF0dHIpO1xuICAgICAgICAgICAgY29uc3QgYXR0cnMgPSB7XG4gICAgICAgICAgICAgICAgLi4ucGFyYW1zXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZGVsZXRlIGF0dHJzW3VuaXFBYXR0cl07XG4gICAgICAgICAgICBjb25zdCBhdHRyc1N0ciA9IGF0dHJzVG9TdHJpbmcoYXR0cnMpO1xuICAgICAgICAgICAgcmV0dXJuIGAke3RhZ0F0dHJ9JHthdHRyc1N0cn1gO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBgJHt0YWd9JHthdHRyc1RvU3RyaW5nKHBhcmFtcyl9YDtcbiAgICB9O1xuICAgIGNsYXNzIFRhZ05vZGUge1xuICAgICAgICBhdHRyKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIHRoaXMuYXR0cnNbbmFtZV0gPSB2YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLmF0dHJzW25hbWVdO1xuICAgICAgICB9XG4gICAgICAgIGFwcGVuZCh2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIGFwcGVuZFRvTm9kZSh0aGlzLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZ2V0IGxlbmd0aCgpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXROb2RlTGVuZ3RoKHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIHRvVGFnU3RhcnQoeyBvcGVuVGFnID1PUEVOX0JSQUtFVCAsIGNsb3NlVGFnID1DTE9TRV9CUkFLRVQgIH0gPSB7fSkge1xuICAgICAgICAgICAgY29uc3QgdGFnQXR0cnMgPSBnZXRUYWdBdHRycyh0aGlzLnRhZywgdGhpcy5hdHRycyk7XG4gICAgICAgICAgICByZXR1cm4gYCR7b3BlblRhZ30ke3RhZ0F0dHJzfSR7Y2xvc2VUYWd9YDtcbiAgICAgICAgfVxuICAgICAgICB0b1RhZ0VuZCh7IG9wZW5UYWcgPU9QRU5fQlJBS0VUICwgY2xvc2VUYWcgPUNMT1NFX0JSQUtFVCAgfSA9IHt9KSB7XG4gICAgICAgICAgICByZXR1cm4gYCR7b3BlblRhZ30ke1NMQVNIfSR7dGhpcy50YWd9JHtjbG9zZVRhZ31gO1xuICAgICAgICB9XG4gICAgICAgIHRvVGFnTm9kZSgpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVGFnTm9kZSh0aGlzLnRhZy50b0xvd2VyQ2FzZSgpLCB0aGlzLmF0dHJzLCB0aGlzLmNvbnRlbnQpO1xuICAgICAgICB9XG4gICAgICAgIHRvU3RyaW5nKHsgb3BlblRhZyA9T1BFTl9CUkFLRVQgLCBjbG9zZVRhZyA9Q0xPU0VfQlJBS0VUICB9ID0ge30pIHtcbiAgICAgICAgICAgIGNvbnN0IGlzRW1wdHkgPSB0aGlzLmNvbnRlbnQubGVuZ3RoID09PSAwO1xuICAgICAgICAgICAgY29uc3QgY29udGVudCA9IHRoaXMuY29udGVudC5yZWR1Y2UoKHIsIG5vZGUpPT5yICsgbm9kZS50b1N0cmluZyh7XG4gICAgICAgICAgICAgICAgICAgIG9wZW5UYWcsXG4gICAgICAgICAgICAgICAgICAgIGNsb3NlVGFnXG4gICAgICAgICAgICAgICAgfSksICcnKTtcbiAgICAgICAgICAgIGNvbnN0IHRhZ1N0YXJ0ID0gdGhpcy50b1RhZ1N0YXJ0KHtcbiAgICAgICAgICAgICAgICBvcGVuVGFnLFxuICAgICAgICAgICAgICAgIGNsb3NlVGFnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChpc0VtcHR5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRhZ1N0YXJ0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGAke3RhZ1N0YXJ0fSR7Y29udGVudH0ke3RoaXMudG9UYWdFbmQoe1xuICAgICAgICAgICAgb3BlblRhZyxcbiAgICAgICAgICAgIGNsb3NlVGFnXG4gICAgICAgIH0pfWA7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3RydWN0b3IodGFnLCBhdHRycywgY29udGVudCl7XG4gICAgICAgICAgICB0aGlzLnRhZyA9IHRhZztcbiAgICAgICAgICAgIHRoaXMuYXR0cnMgPSBhdHRycztcbiAgICAgICAgICAgIHRoaXMuY29udGVudCA9IEFycmF5LmlzQXJyYXkoY29udGVudCkgPyBjb250ZW50IDogW1xuICAgICAgICAgICAgICAgIGNvbnRlbnRcbiAgICAgICAgICAgIF07XG4gICAgICAgIH1cbiAgICB9XG4gICAgVGFnTm9kZS5jcmVhdGUgPSAodGFnLCBhdHRycyA9IHt9LCBjb250ZW50ID0gW10pPT5uZXcgVGFnTm9kZSh0YWcsIGF0dHJzLCBjb250ZW50KTtcbiAgICBUYWdOb2RlLmlzT2YgPSAobm9kZSwgdHlwZSk9Pm5vZGUudGFnID09PSB0eXBlO1xuXG4gICAgZXhwb3J0cy5CQUNLU0xBU0ggPSBCQUNLU0xBU0g7XG4gICAgZXhwb3J0cy5DTE9TRV9CUkFLRVQgPSBDTE9TRV9CUkFLRVQ7XG4gICAgZXhwb3J0cy5FUSA9IEVRO1xuICAgIGV4cG9ydHMuRiA9IEY7XG4gICAgZXhwb3J0cy5OID0gTjtcbiAgICBleHBvcnRzLk9QRU5fQlJBS0VUID0gT1BFTl9CUkFLRVQ7XG4gICAgZXhwb3J0cy5RVU9URU1BUksgPSBRVU9URU1BUks7XG4gICAgZXhwb3J0cy5SID0gUjtcbiAgICBleHBvcnRzLlNMQVNIID0gU0xBU0g7XG4gICAgZXhwb3J0cy5TUEFDRSA9IFNQQUNFO1xuICAgIGV4cG9ydHMuVEFCID0gVEFCO1xuICAgIGV4cG9ydHMuVGFnTm9kZSA9IFRhZ05vZGU7XG4gICAgZXhwb3J0cy5hcHBlbmRUb05vZGUgPSBhcHBlbmRUb05vZGU7XG4gICAgZXhwb3J0cy5hdHRyVmFsdWUgPSBhdHRyVmFsdWU7XG4gICAgZXhwb3J0cy5hdHRyc1RvU3RyaW5nID0gYXR0cnNUb1N0cmluZztcbiAgICBleHBvcnRzLmVzY2FwZUhUTUwgPSBlc2NhcGVIVE1MO1xuICAgIGV4cG9ydHMuZ2V0Tm9kZUxlbmd0aCA9IGdldE5vZGVMZW5ndGg7XG4gICAgZXhwb3J0cy5nZXRVbmlxQXR0ciA9IGdldFVuaXFBdHRyO1xuICAgIGV4cG9ydHMuaXNFT0wgPSBpc0VPTDtcbiAgICBleHBvcnRzLmlzU3RyaW5nTm9kZSA9IGlzU3RyaW5nTm9kZTtcbiAgICBleHBvcnRzLmlzVGFnTm9kZSA9IGlzVGFnTm9kZTtcblxufSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bbob/plugin-helper/dist/index.js\n"));

/***/ }),

/***/ "./src/features/thread/ui/thread.tsx":
/*!*******************************************!*\
  !*** ./src/features/thread/ui/thread.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Thread: function() { return /* binding */ Thread; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _model_use_modal_thread__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../model/use-modal-thread */ \"./src/features/thread/model/use-modal-thread.tsx\");\n/* harmony import */ var _bbob_parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bbob/parser */ \"./node_modules/@bbob/parser/dist/index.js\");\n/* harmony import */ var _bbob_parser__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_bbob_parser__WEBPACK_IMPORTED_MODULE_4__);\n\nvar _s = $RefreshSig$();\n\n\n\n\n_bbob_parser__WEBPACK_IMPORTED_MODULE_4__.parse;\nfunction Thread(param) {\n    let { date, number, content, pictures, desk, isFirst, postsCount, picturesCount, thread, index } = param;\n    _s();\n    const { onMouseDown, onMouseUp, scale, setModalImage, modalImage, onMouseMove, onWheel, handleClick, modalPosition } = (0,_model_use_modal_thread__WEBPACK_IMPORTED_MODULE_3__.useModalThread)();\n    const picPostCount = pictures === null || pictures === void 0 ? void 0 : pictures.length;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex mb-[6px]\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"flex flex-col min-h-[80px] w-auto rounded-sm pr-7\", !isFirst && \"bg-post-color\"),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex flex-row pl-2 pt-1   \",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-zinc-800\",\n                                children: [\n                                    \"Аноним \",\n                                    \" \",\n                                    isFirst && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-green-500 \",\n                                        children: \"#OP\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                                        lineNumber: 56,\n                                        columnNumber: 25\n                                    }, this),\n                                    \" \",\n                                    date,\n                                    \" №\",\n                                    number,\n                                    \" \",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-green-700\",\n                                        children: index != undefined ? index + 1 : \"\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                                        lineNumber: 58,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                                lineNumber: 54,\n                                columnNumber: 11\n                            }, this),\n                            isFirst && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                href: \"\".concat(desk, \"/res/\").concat(thread),\n                                className: \"ml-1 text-orange-600 hover:text-orange-700\",\n                                children: \"Ответ\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                                lineNumber: 63,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                        lineNumber: 53,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        /*КАРТИНКА + ТЕКСТ*/ className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"flex pb-1 \", picPostCount > 1 ? \"flex flex-col\" : \"flex flex-row\"),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(picPostCount > 1 && picPostCount < 4 && \"flex-row\", picPostCount === 1 && \"flex-col\", picPostCount > 3 && \"flex-wrap\", \"flex \"),\n                                children: pictures === null || pictures === undefined ? \"\" : pictures.map((picture, index, array)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(index != array.length - 1 ? \"max-w-content mb-1\" : \"w-full mb-2\"),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                            src: \"http://127.0.0.1:8000/thumbnails/\".concat(picture),\n                                            alt: \"\",\n                                            className: \"cursor-pointer pl-3 pt-2\",\n                                            onClick: ()=>setModalImage(picture)\n                                        }, index, false, {\n                                            fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                                            lineNumber: 93,\n                                            columnNumber: 21\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                                        lineNumber: 88,\n                                        columnNumber: 19\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                                lineNumber: 77,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-base pl-4 py-3\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                    children: content\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                                    lineNumber: 104,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                                lineNumber: 103,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                        lineNumber: 71,\n                        columnNumber: 9\n                    }, this),\n                    isFirst && /* КОНЕЦ КАРТИНКА + ТЕКСТ*/ /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            children: [\n                                postsCount,\n                                \" постов, \",\n                                picturesCount,\n                                \" медиа\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                            lineNumber: 109,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                        lineNumber: 108,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                lineNumber: 47,\n                columnNumber: 7\n            }, this),\n            modalImage && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed top-0 left-0 w-full h-full flex items-center justify-center\",\n                onMouseDown: onMouseDown,\n                onWheel: onWheel,\n                onMouseMove: onMouseMove,\n                onMouseUp: onMouseUp,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                    src: \"http://127.0.0.1:8000/\".concat(modalImage),\n                    alt: \"\",\n                    className: \"max-w-full max-h-full border-8 border-modal-color\",\n                    onClick: handleClick,\n                    style: {\n                        transform: \"translate(\".concat(modalPosition.x, \"px, \").concat(modalPosition.y, \"px) scale(\").concat(scale, \")\")\n                    }\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                    lineNumber: 123,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n                lineNumber: 116,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\laravel_study\\\\client\\\\src\\\\features\\\\thread\\\\ui\\\\thread.tsx\",\n        lineNumber: 46,\n        columnNumber: 5\n    }, this);\n}\n_s(Thread, \"ogILnGtB58Ohla01WTPKGaod6Uk=\", false, function() {\n    return [\n        _model_use_modal_thread__WEBPACK_IMPORTED_MODULE_3__.useModalThread\n    ];\n});\n_c = Thread;\nvar _c;\n$RefreshReg$(_c, \"Thread\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/features/thread/ui/thread.tsx\n"));

/***/ })

});